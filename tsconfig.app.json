/* tsconfig.app.json */
/*
 * This configuration is used for the client-side (browser) part of your project,
 * such as your React application code.
 */
{
  "compilerOptions": {
    // Path where incremental build information is stored (helps speed up subsequent builds)
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",

    // The target JavaScript version for the output code.
    "target": "ES2020",

    // Use the ECMAScript standard for class fields (aligns with modern behavior).
    "useDefineForClassFields": true,

    // List of libraries whose type definitions should be included.
    // "DOM" and "DOM.Iterable" provide types for browser APIs.
    "lib": ["ES2020", "DOM", "DOM.Iterable"],

    // Specify the module system to use in the output; "ESNext" enables modern ES module syntax.
    "module": "ESNext",

    // Skip type-checking of declaration files (.d.ts) for faster builds.
    "skipLibCheck": true,

    /* Bundler mode */
    // Use a module resolution strategy that works well with bundlers like Vite.
    "moduleResolution": "bundler",

    // Allow importing of TypeScript files with their extensions.
    "allowImportingTsExtensions": true,

    // Ensure each file is transpiled in isolation, which is required by some bundlers.
    "isolatedModules": true,

    // Force module detection in files (ensuring that even files without explicit imports/exports are treated as modules).
    "moduleDetection": "force",

    // Do not emit compiled output, as the bundler (e.g., Vite) handles compilation.
    "noEmit": true,

    // Configure JSX transform; "react-jsx" uses the new automatic runtime introduced in React 17+.
    "jsx": "react-jsx",

    /* Linting and strict checks */
    // Enable all strict type-checking options.
    "strict": true,

    // Error if there are unused local variables.
    "noUnusedLocals": true,

    // Error if there are unused function parameters.
    "noUnusedParameters": true,

    // Prevent fall-through cases in switch statements (helps catch errors).
    "noFallthroughCasesInSwitch": true,

    // Ensure that imports that might have side effects are properly checked.
    "noUncheckedSideEffectImports": true
  },
  // Only include files in the "src" directory â€“ typically where your application code lives.
  "include": ["src"]
}
